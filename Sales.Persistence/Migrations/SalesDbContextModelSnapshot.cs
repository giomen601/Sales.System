// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Sales.Persistence.DbContext;

#nullable disable

namespace Sales.Persistence.Migrations
{
    [DbContext(typeof(SalesDbContext))]
    partial class SalesDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Sales.Domain.Entities.Bill", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClientId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Bills");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ClientId = "PrubId",
                            Date = new DateTime(2022, 1, 22, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            ClientId = "PrubId",
                            Date = new DateTime(2022, 2, 22, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            ClientId = "PrubId",
                            Date = new DateTime(2022, 3, 22, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 4,
                            ClientId = "PrubId",
                            Date = new DateTime(2022, 4, 22, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("Sales.Domain.Entities.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "First category"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Second category"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Third category"
                        });
                });

            modelBuilder.Entity("Sales.Domain.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<int?>("SaleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("SaleId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            Description = "First Product to be created",
                            Price = 666.0
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 2,
                            Description = "Second Product to be created",
                            Price = 667.0
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 2,
                            Description = "Third Product to be created",
                            Price = 668.0
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 3,
                            Description = "Four Product to be created",
                            Price = 669.0
                        });
                });

            modelBuilder.Entity("Sales.Domain.Entities.ProductSale", b =>
                {
                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("SaleId")
                        .HasColumnType("int");

                    b.HasKey("ProductId", "SaleId");

                    b.HasIndex("SaleId");

                    b.ToTable("ProductSales");

                    b.HasData(
                        new
                        {
                            ProductId = 1,
                            SaleId = 1
                        },
                        new
                        {
                            ProductId = 2,
                            SaleId = 2
                        },
                        new
                        {
                            ProductId = 3,
                            SaleId = 3
                        },
                        new
                        {
                            ProductId = 3,
                            SaleId = 4
                        },
                        new
                        {
                            ProductId = 2,
                            SaleId = 4
                        });
                });

            modelBuilder.Entity("Sales.Domain.Entities.Sale", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Amounth")
                        .HasColumnType("int");

                    b.Property<int>("BillId")
                        .HasColumnType("int");

                    b.Property<DateTime>("SaleDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("BillId");

                    b.ToTable("Sale");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Amounth = 2,
                            BillId = 1,
                            SaleDate = new DateTime(2022, 12, 31, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            Amounth = 1,
                            BillId = 2,
                            SaleDate = new DateTime(2022, 6, 22, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            Amounth = 1,
                            BillId = 3,
                            SaleDate = new DateTime(2022, 3, 16, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 4,
                            Amounth = 3,
                            BillId = 4,
                            SaleDate = new DateTime(2022, 8, 26, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("Sales.Domain.Entities.Product", b =>
                {
                    b.HasOne("Sales.Domain.Entities.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Sales.Domain.Entities.Sale", null)
                        .WithMany("Products")
                        .HasForeignKey("SaleId");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Sales.Domain.Entities.ProductSale", b =>
                {
                    b.HasOne("Sales.Domain.Entities.Product", "Products")
                        .WithMany("ProductsSales")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Sales.Domain.Entities.Sale", "Sales")
                        .WithMany("ProductSales")
                        .HasForeignKey("SaleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Products");

                    b.Navigation("Sales");
                });

            modelBuilder.Entity("Sales.Domain.Entities.Sale", b =>
                {
                    b.HasOne("Sales.Domain.Entities.Bill", "Bill")
                        .WithMany()
                        .HasForeignKey("BillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bill");
                });

            modelBuilder.Entity("Sales.Domain.Entities.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("Sales.Domain.Entities.Product", b =>
                {
                    b.Navigation("ProductsSales");
                });

            modelBuilder.Entity("Sales.Domain.Entities.Sale", b =>
                {
                    b.Navigation("ProductSales");

                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
